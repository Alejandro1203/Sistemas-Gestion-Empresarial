dao (interfaz)
public interface IDAO {
        void list();
        void update(int id);
        void insert();
        void remove(int id);
}
daoc (class)
static Scanner kin = new Scanner(System.in);
    private SessionFactory sessionFactory;
    @Getter
    private Session session;

    public DepartamentosDAO() {
        this.sessionFactory = new Configuration().configure().buildSessionFactory();
        this.session = sessionFactory.openSession();
    }

list
@Override
    public void list() {
        String hql = "SELECT name FROM Clase name";
        Query query = session.createQuery(hql);
        List<Clase> listaName = query.getResultList();

        for (Clase name : listaName) {
            System.out.println(name.toString());
        }
    }
update
@Override
    public void update(int value) {
        Query<Clase> miQuery = session.createQuery("from Clase where id = :value");
        List<Clase> listaName = miQuery.setParameter("clave", value).list();

        Transaction transaction = session.beginTransaction();
        Clase name = (Clase) listaName.getFirst();
        name.setId(value);

        session.update(name);
        transaction.commit();
    }
insert
@Override
    public void insert() {
        String nombre;
        String ubicacion;

        System.out.print("Ingrese el nombre del name: ");
        nombre = kin.nextLine();
        System.out.print("Ingrese la ubicaci√≥n del name: ");
        ubicacion = kin.nextLine();

        Transaction transaction = session.beginTransaction();
        Clase name = new Departamento();
        name.setNombre(nombre);
        name.setUbicacion(ubicacion);
        session.save(name);
        transaction.commit();
    }
remove
@Override
    public void remove(int value) {
        Query<Clase> miQuery = session.createQuery("from Clase where id = :clave");
        miQuery.setParameter("clave", value);
        Clase name = (Clase) miQuery.uniqueResult();

        Transaction transaction = session.beginTransaction();
        session.delete(name);
        transaction.commit();
        System.out.println("Se ha eliminado el departamento con id: " + value);
    }
entidad
@Getter
@Setter
@Entity
@Table(name = "name")